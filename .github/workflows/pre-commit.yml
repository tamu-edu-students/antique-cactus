name: 'Run Status Checks'
on: # run on any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

jobs:
  generator: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: austenstone/job-id@v1
        id: job-id
      - uses: actions/setup-node@v4
        with:
          node-version: '23'
      - run: npm install
      - name: Pre-Commit Node Check
        id: precommit_node
        # You may pin to the exact commit or the version.
        # uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd
        uses: pre-commit/action@v3.0.1
        continue-on-error: true
        with:
          # options to pass to pre-commit run
          extra_args: node --all-files
          
      - name: Report Node Status # You would run your tests before this using the output to set state/desc
        uses: hkusu/status-create-action@v1.0.1
        with:
          # authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'JS Lint'
          description: ${{ steps.precommit_node.outcome }}
          state: ${{ steps.precommit_node.outcome }}
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          target-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.job-id.outputs.job-id }}#step:7:0"

      
      
      
      - name: Pre-Commit Docker Compose Check
        id: precommit_docker_compose
        # You may pin to the exact commit or the version.
        # uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd
        uses: pre-commit/action@v3.0.1
        continue-on-error: true
        with:
          # options to pass to pre-commit run
          extra_args: docker-compose --all-files
          
      - name: Report Docker Compose Status # You would run your tests before this using the output to set state/desc
        uses: hkusu/status-create-action@v1.0.1
        with:
          # authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Docker Compose Lint'
          description: ${{ steps.precommit_docker_compose.outcome }}
          state: ${{ steps.precommit_docker_compose.outcome }}
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          target-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.job-id.outputs.job-id }}#step:9:0"


      - uses: hadolint/hadolint-action@v3.1.0
        id: precommit_docker
        continue-on-error: true
        with:
          dockerfile: Dockerfile

      # - name: Capture Step Index
      #   run: |
      #     echo "$GITHUB_ACTION"
      #     echo "$GITHUB_ACTION_PATH"
      #     STEP_INDEX=$(grep -n "Run $GITHUB_ACTION" "$GITHUB_ACTION_PATH" | cut -d: -f1)
      #     echo "Step Index: $STEP_INDEX"
          # STEP_NUM=$(echo "$STEPS_CONTEXT" | jq -r --arg STEP_ID "$STEP_ID" 'keys | to_entries | map(select(.value == $STEP_ID)) | .[].key + 1')
          
      # - name: Get Dockerfile Reference
      #   id: precommit_docker_ref
      #   env:
      #     STEP_NUM: 4          
      #   run: |
      #     echo "$STEPS_CONTEXT"
      #     echo "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.job-id.outputs.job-id }}#step:$STEP_NUM:0" >> $GITHUB_OUTPUT
          
      - name: Report Dockerfile Status # You would run your tests before this using the output to set state/desc
        uses: hkusu/status-create-action@v1.0.1
        with:
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          state: ${{ steps.precommit_docker.outcome }}
          # authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Dockerfile Lint'
          description: "${{ steps.precommit_docker.outcome }}"
          target-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.job-id.outputs.job-id }}#step:11:0"


