name: Deploy to balenaCloud

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest Balena CLI version
        id: get_version
        run: |
          latest_release=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/balena-io/balena-cli/releases/latest)
          tag_name=$(echo "$latest_release" | jq -r .tag_name)
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          echo "Using Balena CLI $tag_name"

      - name: Download and unzip Balena CLI
        run: |
          tag_name=${{ steps.get_version.outputs.tag_name }}
          tag_name_lower=$(echo "$tag_name" | tr '[:upper:]' '[:lower:]')
          url="https://github.com/balena-io/balena-cli/releases/download/$tag_name_lower/balena-cli-$tag_name_lower-linux-arm64-standalone.zip"

          wget "$url" -O balena-cli.zip
          unzip balena-cli.zip -d .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to balenaCloud
        run: |
          ./balena-cli/balena login --token "${{ secrets.BALENA_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Container
        id: build
        run: |
          repo_name=$(basename "${GITHUB_REPOSITORY}")
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT
          echo "Using fleet $repo_name"
          ./balena-cli/balena build --fleet "$repo_name"
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Deploy to balenaCloud
        id: deploy
        run: |
          repo_name=${{ steps.build.outputs.repo_name }}
          ./balena-cli/balena deploy "$repo_name"
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
